---
#TODO: rewrite for package managers other than apt
- name: Check installed packages
  ansible.builtin.package_facts:

- name: Add Graylog GPG key
  apt_key:
    url: "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xf5679a222c647c87527c2f8cb00a0bd1e2c63c11"
    state: present
  # when: "'graylog-server' not in ansible_facts.packages and 'graylog-datanode' not in ansible_facts.packages"

- name: Download and install Graylog repository
  apt:
    deb: "https://packages.graylog2.org/repo/packages/graylog-6.1-repository_latest.deb" #keep locally
    state: present
  # when: "'graylog-server' not in ansible_facts.packages and 'graylog-datanode' not in ansible_facts.packages"

- name: Download MongoDB GPG key
  ansible.builtin.get_url:
    url: https://www.mongodb.org/static/pgp/server-7.0.asc
    dest: /tmp/mongodb-server-7.0.asc
    owner: root
    group: root
    mode: '0644'

- name: Add MongoDB GPG key to keyrings
  ansible.builtin.command:
    cmd: gpg --dearmor --yes -o /usr/share/keyrings/mongodb-server-7.0.gpg /tmp/mongodb-server-7.0.asc
  become: true

- name: create sources.list entry for mongodb
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/mongodb-org-7.0.list
    state: touch
    mode: 0644

- name: create sources.list entry for mongodb
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/mongodb-org-7.0.list
    line: "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" 
    state: present

- name: Update package cache
  apt:
    update_cache: yes

- name: Install Graylog components
  apt:
    name:
      - graylog-datanode
      - graylog-server
      - gnupg
      - curl
      - mongodb-org
      - apt-transport-https 
      - openjdk-21-jre-headless 
      - uuid-runtime 
      - pwgen 
      - dirmngr 
      - wget
    state: present
  # when: "'graylog-server' not in ansible_facts.packages and 'graylog-datanode' not in ansible_facts.packages and 'mongodb' not in ansible_facts.packages"

- name: Enable and restart MongoDB
  systemd:
    name: mongod.service
    enabled: true
    state: restarted

- name: Set vm.max_map_count for Elasticsearch
  lineinfile:
    path: /etc/sysctl.conf
    line: "vm.max_map_count=262144"
    state: present

- name: Apply sysctl settings
  command: sysctl -p

- name: Install password utilities
  ansible.builtin.package:
    name: 
      - pwgen
    state: present 

- name: Generate password_secret
  command: pwgen -A -N 1 -s 96
  register: password_secret

- name: Debug password_secret
  debug:
    var: password_secret.stdout

- name: Set password_secret in datanode.conf
  ansible.builtin.lineinfile:
    path: /etc/graylog/datanode/datanode.conf
    regexp: '^password_secret ?='
    line: "password_secret ='{{ password_secret.stdout }}'"
    state: present

- name: Set password_secret in server.conf
  ansible.builtin.lineinfile:
    path: /etc/graylog/server/server.conf
    regexp: '^password_secret ?='
    line: "password_secret ='{{ password_secret.stdout }}'"
    state: present

- name: Set root_password_sha2 in datanode.conf
  ansible.builtin.lineinfile:
    path: /etc/graylog/datanode/datanode.conf
    regexp: '^root_password_sha2 ='
    line: "root_password_sha2 ={{ root_password | password_hash('sha256') }}"
    state: present
    owner: graylog
    group: graylog
    mode: '0640'

- name: Set root_password_sha2 in server.conf
  ansible.builtin.lineinfile:
    path: /etc/graylog/server/server.conf
    regexp: '^root_password_sha2 ='
    line: "root_password_sha2 ={{ root_password | password_hash('sha256') }}"
    state: present
    owner: graylog
    group: graylog
    mode: '0640'

- name: Configure Elasticsearch hosts in server.conf
  lineinfile:
    path: /etc/graylog/server/server.conf
    regexp: '^elasticsearch_hosts='
    line: "elasticsearch_hosts=https://graylog:{{ wazuh_graylog_password }}@{{ manager_ip }}:9200"
    state: present
  
- name: Create graylog certs directory
  ansible.builtin.file:
    path: /etc/graylog/server/certs
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy cacerts file from Java directory to Graylog certs directory
  ansible.builtin.copy:
    src: /usr/lib/jvm/java-21-openjdk-amd64/lib/security/cacerts
    dest: /etc/graylog/server/certs/cacerts
    remote_src: yes
    owner: root
    group: root
    mode: '0644'

- name: Fetch the Wazuh indexer certificate
  ansible.builtin.copy:
    src: /tmp/wazuh-indexer.pem
    dest: /tmp/wazuh-indexer.pem
    owner: root
    group: root
    mode: '0644'

- name: Import the Wazuh indexer certificate to the cacerts keystore
  ansible.builtin.command:
    cmd: >
      keytool -importcert -keystore /etc/graylog/server/certs/cacerts -storepass changeit -alias root_ca -file /tmp/wazuh-indexer.pem -noprompt
  environment:
    JAVA_HOME: "/usr/lib/jvm/java-21-openjdk-amd64"

- name: Ensure the correct GRAYLOG_SERVER_JAVA_OPTS in /etc/default/graylog-server
  ansible.builtin.lineinfile:
    path: /etc/default/graylog-server
    regexp: '^GRAYLOG_SERVER_JAVA_OPTS=".*-Dlog4j2\.formatMsgNoLookups=true.*"'
    line: 'GRAYLOG_SERVER_JAVA_OPTS="$GRAYLOG_SERVER_JAVA_OPTS -Dlog4j2.formatMsgNoLookups=true -Djavax.net.ssl.trustStore=/etc/graylog/server/certs/cacerts -Djavax.net.ssl.trustStorePassword=changeit"'
    backrefs: yes
    state: present

- name: Enable and start Graylog Server
  systemd:
    name: graylog-server.service
    enabled: true
    state: restarted

- name: Enable and start Graylog Datanode
  systemd:
    name: graylog-datanode.service
    enabled: true
    state: restarted